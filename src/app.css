@import 'tailwindcss';

@config '../tailwind.config.ts';

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
	*,
	::after,
	::before,
	::backdrop,
	::file-selector-button {
		border-color: var(--color-gray-200, currentColor);
	}
}

@layer base {
	:root {
		--background: 0 0% 100%;
		--foreground: 240 10% 3.9%;
		--card: 0 0% 100%;
		--card-foreground: 240 10% 3.9%;
		--popover: 0 0% 100%;
		--popover-foreground: 240 10% 3.9%;
		--primary: 221 83% 53%;
		--primary-foreground: 210 40% 98%;
		--secondary: 240 4.8% 95.9%;
		--secondary-foreground: 240 5.9% 10%;
		--muted: 240 4.8% 95.9%;
		--muted-foreground: 240 3.8% 46.1%;
		--accent: 240 4.8% 95.9%;
		--accent-foreground: 240 5.9% 10%;
		--destructive: 0 84.2% 60.2%;
		--destructive-foreground: 0 0% 98%;
		--border: 240 5.9% 90%;
		--input: 240 5.9% 90%;
		--ring: 221 83% 53%;
		--radius: 1rem;
	}

	.dark {
		--background: 240 10% 3.9%;
		--foreground: 0 0% 98%;
		--card: 240 10% 3.9%;
		--card-foreground: 0 0% 98%;
		--popover: 240 10% 3.9%;
		--popover-foreground: 0 0% 98%;
		--primary: 217.2 91.2% 59.8%;
		--primary-foreground: 210 40% 98%;
		--secondary: 240 3.7% 15.9%;
		--secondary-foreground: 0 0% 98%;
		--muted: 240 3.7% 15.9%;
		--muted-foreground: 240 5% 64.9%;
		--accent: 240 3.7% 15.9%;
		--accent-foreground: 0 0% 98%;
		--destructive: 0 62.8% 30.6%;
		--destructive-foreground: 0 0% 98%;
		--border: 240 3.7% 15.9%;
		--input: 240 3.7% 15.9%;
		--ring: 217.2 91.2% 59.8%;
	}
}

@layer base {
	* {
		@apply border-border;
	}
	body {
		@apply bg-background text-foreground relative antialiased;
		font-feature-settings: 'ss01', 'ss02', 'cv01', 'cv02', 'cv03';
	}
	body::before {
		content: '';
		position: fixed;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		z-index: 0;
		background-image: url('/bread-pattern.svg');
		background-size: 80px;
		opacity: 0.05;
		pointer-events: none;
		animation: patternFloat 60s linear infinite;
	}
}

@keyframes patternFloat {
	0% {
		background-position: 0 0;
	}
	100% {
		background-position: 80px 80px;
	}
}

.bread-pattern {
	position: relative;
}

.bread-pattern::before {
	content: '';
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	background-image: url('/bread-pattern.svg');
	background-size: 80px;
	opacity: 0.05;
	pointer-events: none;
	z-index: 0;
}

.text-balance {
	text-wrap: balance;
}

.hover-lift {
	@apply transition-all duration-300;
}

.hover-lift:hover {
	transform: translateY(-2px);
	box-shadow: 0 12px 24px -10px hsl(var(--primary) / 0.2);
}

/* Modern card styles */
.modern-card {
	@apply bg-card rounded-2xl shadow-lg p-6 transition-all duration-300;
	backdrop-filter: blur(10px);
	border: 1px solid rgba(255, 255, 255, 0.1);
}

.modern-card:hover {
	transform: translateY(-5px);
	box-shadow: 0 20px 40px -15px hsl(var(--primary) / 0.2);
}

/* Glass effect */
.glass {
	@apply bg-background/10 backdrop-blur-lg;
	border: 1px solid rgba(255, 255, 255, 0.1);
}

/* 3D card effect */
.card-3d {
	transform-style: preserve-3d;
	perspective: 1000px;
}

.card-3d:hover {
	transform: rotateY(10deg);
}

/* Animation utilities */
.animate-float {
	animation: float 6s ease-in-out infinite;
}

@keyframes float {
	0%,
	100% {
		transform: translateY(0);
	}
	50% {
		transform: translateY(-20px);
	}
}

.animate-pulse-slow {
	animation: pulse 4s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

@keyframes pulse {
	0%,
	100% {
		opacity: 1;
	}
	50% {
		opacity: 0.5;
	}
}

/* Bread icon styles */
.bread-icon {
	position: fixed;
	pointer-events: none;
	z-index: 1;
}

/* Loaf bread */
.bread-icon.loaf {
	width: 60px;
	height: 40px;
	background: #8b4513;
	border: 2px solid #5c2c0c;
	border-radius: 30px 30px 10px 10px;
	box-shadow:
		inset -5px -5px 15px rgba(0, 0, 0, 0.3),
		2px 2px 5px rgba(0, 0, 0, 0.2);
}

.bread-icon.loaf::before {
	content: '';
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	width: 45px;
	height: 25px;
	background:
		radial-gradient(circle at 10px 8px, #5c2c0c 1.5px, transparent 1.5px),
		radial-gradient(circle at 20px 6px, #5c2c0c 1.5px, transparent 1.5px),
		radial-gradient(circle at 30px 9px, #5c2c0c 1.5px, transparent 1.5px),
		radial-gradient(circle at 15px 12px, #5c2c0c 1.5px, transparent 1.5px),
		radial-gradient(circle at 25px 10px, #5c2c0c 1.5px, transparent 1.5px);
}

/* Bagel */
.bread-icon.bagel {
	width: 45px;
	height: 45px;
	background: #c68e17;
	border: 2px solid #8b4513;
	border-radius: 50%;
	box-shadow:
		inset 0 0 15px rgba(0, 0, 0, 0.3),
		2px 2px 5px rgba(0, 0, 0, 0.2);
}

.bread-icon.bagel::before {
	content: '';
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	width: 20px;
	height: 20px;
	background: #8b4513;
	border-radius: 50%;
	box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.5);
}

/* Croissant */
.bread-icon.croissant {
	width: 50px;
	height: 35px;
	background: #deb887;
	border: none;
	clip-path: path('M10,25 Q15,10 30,5 Q45,0 45,15 Q45,30 30,30 Q15,30 10,25 Z');
	box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.2);
}

.bread-icon.croissant::before {
	content: '';
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	background: linear-gradient(
		45deg,
		transparent 0%,
		rgba(255, 255, 255, 0.2) 50%,
		transparent 100%
	);
}

@keyframes breadFloat {
	0%,
	100% {
		transform: translate(0, 0) rotate(0deg);
	}
	25% {
		transform: translate(20px, -15px) rotate(5deg);
	}
	50% {
		transform: translate(40px, 0) rotate(0deg);
	}
	75% {
		transform: translate(20px, 15px) rotate(-5deg);
	}
}
